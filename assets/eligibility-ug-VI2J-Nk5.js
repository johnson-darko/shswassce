import{c as I,n as x,m as E,g as O}from"./index-pM2q3zhF.js";const Y=["Bachelor of Education in Early Grade Specialism (Distance)","Bachelor of Education in Upper Primary Specialism (Distance)","Bachelor of Education in JHS Specialism (Distance)","Bachelor of Arts (Distance)","Bachelor of Science in Business Administration (Distance)","B.Ed. in Upper Grade Specialism","B.Ed. in Early Grade Specialism","B.Ed. in JHS Specialism","B.Ed. in Social Studies","B.Ed. in Spanish","B.Ed. in Arabic","B.Ed. in Performing Arts (Dance)","B.Ed. in Performing Arts (Music)","B.Ed. in Performing Arts (Theatre Arts)","B.Ed. in Physical Education and Health","B.A. in Sport and Physical Culture Studies","Bachelor of Fine Arts"];function H(R,_,M){const D=[],$=I(R);$.length>0&&$[0].aggregate;for(const c of _){const B=M.filter(i=>i.programId===c.id);if(B.length===0)continue;let f=null;for(const i of B){let m="not_eligible",A="",P=[],S=[],w=[],T,q,j=!1,n=null,g=null;if(Y.includes(c.name))for(const s of $){let d=!0,u=[];({...R});for(const e of s.coreSubjects)(e.subject??"").toLowerCase().replace(/\s+/g,""),e.grade;d=!0,u=[];let l=!0,a=[];const o=new Set;let v=0,b=0;if(i.electiveSubjects&&i.electiveSubjects.length>0)for(const e of i.electiveSubjects){let p=!1;if(e.type==="single"){for(let r=0;r<s.electiveSubjects.length;r++){if(o.has(r))continue;const t=s.electiveSubjects[r];if(x(t.subject??"")===x(e.subject??"")&&E(t.grade??"",e.min_grade??"")){p=!0,a.push(`${t.subject}: ✓ ${t.grade}`),o.add(r),v++;break}}p||(l=!1,a.push(`${e.subject}: Need ${e.min_grade}`))}else if(e.type==="any"){let r=[];if(e.subjects&&e.subjects.length===1&&e.subjects[0]==="ANY")for(let t=0;t<s.electiveSubjects.length;t++){if(o.has(t))continue;const y=s.electiveSubjects[t];E(y.grade??"",e.min_grade??"")&&r.push({idx:t,e:y})}else for(let t=0;t<s.electiveSubjects.length;t++){if(o.has(t))continue;const y=s.electiveSubjects[t];E(y.grade??"",e.min_grade??"")&&r.push({idx:t,e:y})}if(r.length>=e.count)for(let t=0;t<e.count;t++)a.push(`${r[t].e.subject}: ✓ ${r[t].e.grade}`),o.add(r[t].idx),b++;else r.forEach(t=>{a.push(`${t.e.subject}: ✓ ${t.e.grade}`),o.add(t.idx)}),l=!1,a.push(`Any ${e.count} from: Need at least ${e.count} subjects with ${e.min_grade} or better`)}}const G=i.electiveSubjects.filter(e=>e.type==="single").length,h=i.electiveSubjects.filter(e=>e.type==="any").reduce((e,p)=>e+(p.count||0),0);l=l&&v===G&&b===h;let k=!i.aggregatePoints||s.aggregate<=i.aggregatePoints;if(d&&l&&k){n={combo:s,coreDetails:u,electivesDetails:a};break}else d&&l&&s.aggregate<=(i.aggregatePoints||999)+3&&(g={combo:s,coreDetails:u,electivesDetails:a})}else if(c.name==="Bachelor of Science in Information Technology (Distance)")for(const s of $){let d=!0,u=[];for(const e of s.coreSubjects)i.coreSubjects.compulsory.includes(e.subject)&&(E(e.grade??"",i.coreSubjects.minGrade)?u.push(`${e.subject}: ✓ ${e.grade}`):(d=!1,u.push(`${e.subject}: Need ${i.coreSubjects.minGrade}`)));let l=!0,a=[];const o=i.electiveSubjects[0].count,v=i.electiveSubjects[0].minGrade;let b=s.electiveSubjects.filter(e=>E(e.grade,v));if(b.length>=o)for(let e=0;e<o;e++)a.push(`${b[e].subject}: ✓ ${b[e].grade}`);else l=!1,a.push(`Need at least ${o} electives with ${v} or better`);let h=[...s.coreSubjects.filter(e=>i.coreSubjects.compulsory.includes(e.subject)),...b.slice(0,o)].reduce((e,p)=>e+O(p.grade??"F9"),0),k=h<=i.aggregatePoints;if(d&&l&&k){n={combo:s,coreDetails:u,electivesDetails:a,aggregate:h};break}else d&&l&&h<=(i.aggregatePoints||999)+3&&(g={combo:s,coreDetails:u,electivesDetails:a,aggregate:h})}else continue;n?(m="eligible",A="You meet all CORE requirements for this program!",P=[...n.coreDetails,...n.electivesDetails,`Aggregate: ✓ ${n.combo.aggregate}/${i.aggregatePoints}`],q=n.combo.combination,j=n.combo.isBest):g?(m="borderline",A="You're close to meeting the requirements",P=[...g.coreDetails,...g.electivesDetails,`Aggregate: ${g.combo.aggregate}/${i.aggregatePoints} (close)`],q=g.combo.combination,j=g.combo.isBest,S.push("Consider retaking subjects with borderline grades"),S.push("Apply anyway as requirements may be flexible")):(m="not_eligible",A="You do not meet the current requirements",S.push("Consider retaking key subjects to improve grades"),S.push("Look for foundation or bridging programs"));let C=30;m==="eligible"?C=j?100:90:m==="borderline"&&(C=j?70:60);const N={programId:c.id,programName:c.name,universityName:c.universityName,status:m,message:A,details:P,recommendations:S,matchScore:C,careerOutcomes:c.careerOutcomes,averageSalary:c.averageSalary,employmentRate:c.employmentRate,admissionTracks:w,bestTrackMatch:T,requirementComplexity:i.requirementComplexity,usedCombination:q,combinationFromBest:j,matchedRequirementId:i.id};if(m==="eligible"){f=N;break}(!f||(N.matchScore??0)>(f.matchScore??0))&&(f=N)}f&&D.push(f)}return D.sort((c,B)=>(B.matchScore||0)-(c.matchScore||0)),D}export{H as checkEligibilityUG};
